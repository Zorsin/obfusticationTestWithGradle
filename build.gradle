import proguard.gradle.ProGuardTask

group 'com.zorsin.obfusticationTest'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven'

sourceCompatibility = 1.8

def javaName = 'itssomething'
def fullJavaName = archivesBaseName + '-full'
def mainClassName = 'obfusticationUI.MainUI'

repositories {
    mavenCentral()
}

sourceSets {
    main{
        java{
            srcDir 'src/main/java'
        }
    }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

jar {
    baseName = javaName;
    manifest {
        attributes "Implementation-Title": javaName
        attributes "Implementation-Version": version
        attributes "Main-Class": mainClassName

    }
}

task fullJavaJar(type: Jar) {
    baseName = fullJavaName
    manifest {
        attributes "Implementation-Title": baseName
        attributes "Implementation-Version": version
        attributes "Main-Class": mainClassName
    }
    from sourceSets.main.output
    artifacts {
        archives fullJavaJar
    }
}

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'net.sf.proguard:proguard-gradle:5.2.1'
    }
}


task proguard(type: ProGuardTask, dependsOn: 'obfuscatedJar') {
    configuration '/proguard.txt'

    injars "$buildDir/libs/${fullJavaName}-${version}.jar"
    outjars "$buildDir/libs/${javaName}-${version}.jar"

    libraryjars "${System.getProperty('java.home')}/lib/rt.jar"
    libraryjars configurations.compile.find { it.name.startsWith("gson") }
    libraryjars configurations.compile.find { it.name.startsWith("slf4j-api") }
}

task obfuscate(dependsOn: tasks.withType(ProGuardTask)) << {}

install.dependsOn(obfuscate)

install {
    repositories.mavenInstaller {
        addFilter(javaName) { artifact, file -> artifact.name.endsWith(javaName) }
        pom(javaName).whenConfigured {
            p ->
                p.dependencies = p.dependencies.findAll {
                    dep -> dep.artifactId != "junit"
                }
        }
    }
}